/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto_agendmiento_citas;

import static com.mycompany.proyecto_agendmiento_citas.reservarCita.jcDia;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 *
 * @author Alexis Chapal
 */
public class ventanaEditarCitaU extends javax.swing.JFrame {

    /**
     * Creates new form ventanaEditarCitaU
     */
    public ventanaEditarCitaU() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtHora = new javax.swing.JTextField();
        txtServicio = new javax.swing.JTextField();
        txtBarbero = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jcCitas = new javax.swing.JComboBox<>();
        jcDia = new javax.swing.JComboBox<>();
        jcMes = new javax.swing.JComboBox<>();
        jcAnio = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jcProfesiona = new javax.swing.JComboBox<>();
        btnEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("USUARIO: ");

        jLabel2.setText("FECHA: ");

        jLabel3.setText("HORA: ");

        jLabel4.setText("BARBERO: ");

        jLabel5.setText("SERVICIO: ");

        jLabel6.setText("PRECIO: ");

        txtUsuario.setEditable(false);

        txtFecha.setEditable(false);
        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });

        txtHora.setEditable(false);

        txtServicio.setEditable(false);

        txtBarbero.setEditable(false);
        txtBarbero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarberoActionPerformed(evt);
            }
        });

        txtPrecio.setEditable(false);

        jToggleButton1.setText("CANCELAR CITA");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("DETALLES");

        jLabel8.setText("EDITAR CITA");

        jLabel11.setText("CITA: ");

        jcCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcCitasActionPerformed(evt);
            }
        });

        jcDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcDiaActionPerformed(evt);
            }
        });

        jcMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        jcMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcMesActionPerformed(evt);
            }
        });

        jcAnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2024", " " }));

        jLabel13.setText("DIA");

        jLabel14.setText("MES");

        jLabel15.setText("AÑO");

        jLabel9.setText("PROFESIONAL");

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtUsuario)
                    .addComponent(txtFecha)
                    .addComponent(txtHora)
                    .addComponent(txtBarbero)
                    .addComponent(txtServicio)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(jcCitas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcDia, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcMes, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcProfesiona, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEditar)
                        .addGap(124, 124, 124))))
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcCitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBarbero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(80, 80, 80)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcProfesiona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnEditar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBarberoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarberoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarberoActionPerformed

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaActionPerformed

    private void jcCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcCitasActionPerformed
        // TODO add your handling code here:

        barbero nBar = new barbero();
        cliente client = new cliente();

        Connection conexion = conectar_bd.conectar();
        if (conexion != null) {
            try {
                String query = "SELECT fecha, hora, idCliente, idBarbero, servicio, precioServicio FROM Cita WHERE id= ?";
                PreparedStatement preparedStatement = conexion.prepareStatement(query);
                preparedStatement.setLong(1, Integer.parseInt((String) jcCitas.getSelectedItem()));

                ResultSet resultSet = preparedStatement.executeQuery();
                if (resultSet.next()) {
                    System.out.println("Cita encontrada para el cliente.");
                    Date fecha = resultSet.getDate("fecha");
                    Time hora = resultSet.getTime("hora");
                    int barbero_id = resultSet.getInt("idBarbero");
                    String service = resultSet.getString("servicio");
                    int precio_servicio = resultSet.getInt("precioServicio");

                    txtUsuario.setText(loginCliente.nombreU);
                    txtFecha.setText(fecha.toString());
                    txtHora.setText(hora.toString());

                    String nombreB = nBar.buscarPorId(barbero_id);
                    txtBarbero.setText(nombreB);
                    txtServicio.setText(service);
                    txtPrecio.setText(String.valueOf(precio_servicio));

                } else {
                    System.out.println("No se encontraron citas para el cliente.");
                }
            } catch (SQLException e) {
                e.printStackTrace();
            } finally {
                if (conexion != null) {
                    try {
                        conexion.close();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        }

    }//GEN-LAST:event_jcCitasActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:

        int op = Integer.parseInt(JOptionPane.showInputDialog(null, "ESTÁS SEGURO DE CANCELAR LA\nCITA?, NO TENDRÁS REEMBOLSO\n\n1.Si\n2.No"));
        switch (op) {

            case 1:
                Connection conexion = conectar_bd.conectar();
                PreparedStatement preparedStatement = null;
                try {

                    String query = "DELETE FROM Cita WHERE id = ?";

                    preparedStatement = conexion.prepareStatement(query);
                    preparedStatement.setLong(1, Integer.parseInt((String) jcCitas.getSelectedItem()));
                    preparedStatement.setInt(1, Integer.parseInt((String) jcCitas.getSelectedItem()));

                    int rowsAffected = preparedStatement.executeUpdate();
                    if (rowsAffected > 0) {
                        System.out.println("El registro fue eliminado exitosamente.");
                    } else {
                        System.out.println("No se encontró ningún registro con el ID especificado.");
                    }

                } catch (SQLException e) {
                    e.printStackTrace();
                } finally {
                    // Cerrar el PreparedStatement y la conexión
                    try {
                        if (preparedStatement != null) {
                            preparedStatement.close();
                        }
                        if (preparedStatement != null) {
                            preparedStatement.close();
                        }
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }

            case 2:
                break;
        }


    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jcDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcDiaActionPerformed

    private void jcMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcMesActionPerformed
        // TODO add your handling code here:
        String item = (String) jcMes.getSelectedItem();
        if (item == "Agosto") {

            LocalDate fechaActual = LocalDate.now();
            int diaDelMes = fechaActual.getDayOfMonth();
            jcDia.removeAllItems();
            int cont = diaDelMes;
            while (cont <= 31) {

                jcDia.addItem(String.valueOf(cont));
                cont += 1;
            }
        }
        if (item == "Septiembre") {
            jcDia.removeAllItems();
            int cont = 1;
            while (cont <= 30) {

                jcDia.addItem(String.valueOf(cont));
                cont += 1;
            }
        }
        if (item == "Octubre") {
            jcDia.removeAllItems();
            int cont = 1;
            while (cont <= 31) {

                jcDia.addItem(String.valueOf(cont));
                cont += 1;
            }
        }
        if (item == "Noviembre") {
            jcDia.removeAllItems();
            int cont = 1;
            while (cont <= 30) {

                jcDia.addItem(String.valueOf(cont));
                cont += 1;
            }
        }
        if (item == "Diciembre") {
            jcDia.removeAllItems();
            int cont = 1;
            while (cont <= 31) {

                jcDia.addItem(String.valueOf(cont));
                cont += 1;
            }
        }
    }//GEN-LAST:event_jcMesActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        barbero barbero = new barbero();
        Connection conexion = null;
        PreparedStatement pstmt = null;

        try {
            conexion = conectar_bd.conectar();
            int año = Integer.parseInt((String) jcAnio.getSelectedItem());
            int dia = Integer.parseInt((String) jcDia.getSelectedItem());
            int mes = 0;
            if ("Agosto".equals(jcMes.getSelectedItem())) {
                mes = 8;
            } else if ("Septiembre".equals(jcMes.getSelectedItem())) {
                mes = 9;
            } else if ("Octubre".equals(jcMes.getSelectedItem())) {
                mes = 10;
            } else if ("Noviembre".equals(jcMes.getSelectedItem())) {
                mes = 11;
            } else if ("Diciembre".equals(jcMes.getSelectedItem())) {
                mes = 12;
            }
            
            LocalDate fecha = LocalDate.of(año, mes, dia);
            Date sqlDate = Date.valueOf(fecha);

            // Verificamos eque no haya una cita con la misma fecha y barbero 
            String checkQuery = "SELECT COUNT(*) FROM Cita WHERE fecha = ? AND idBarbero = ? AND id <> ?";
            try (PreparedStatement checkStmt = conexion.prepareStatement(checkQuery)) {
                checkStmt.setDate(1, sqlDate);
                checkStmt.setInt(2, barbero.obtenerId(jcProfesiona.getSelectedItem().toString()));
                checkStmt.setInt(3, Integer.parseInt(jcCitas.getSelectedItem().toString()));
                ResultSet rs = checkStmt.executeQuery();
                if (rs.next() && rs.getInt(1) > 0) {
                    System.out.println("La cita con la misma fecha y barbero ya existe.");
                    return;
                }
            }

            //Como la cita no se repite con otra se actualiza 
            String query = "UPDATE Cita SET fecha = ?, idBarbero = ? WHERE id = ?";
            pstmt = conexion.prepareStatement(query);
            pstmt.setDate(1, sqlDate);
            pstmt.setInt(2, barbero.obtenerId(jcProfesiona.getSelectedItem().toString()));
            pstmt.setInt(3, Integer.parseInt(jcCitas.getSelectedItem().toString()));

            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null,"El registro fue actualizado exitosamente.");
                this.dispose();
            } else {
                System.out.println("No se encontró ningún registro con el ID especificado.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (pstmt != null) {
                    pstmt.close();
                }
                if (conexion != null) {
                    conexion.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaEditarCitaU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaEditarCitaU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaEditarCitaU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaEditarCitaU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaEditarCitaU().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox<String> jcAnio;
    public static javax.swing.JComboBox<String> jcCitas;
    public static javax.swing.JComboBox<String> jcDia;
    private javax.swing.JComboBox<String> jcMes;
    public static javax.swing.JComboBox<String> jcProfesiona;
    public static javax.swing.JTextField txtBarbero;
    public static javax.swing.JTextField txtFecha;
    public static javax.swing.JTextField txtHora;
    public static javax.swing.JTextField txtPrecio;
    public static javax.swing.JTextField txtServicio;
    public static javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
